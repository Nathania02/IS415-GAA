---
title: "In-class Ex 05"
author: "Nathania Yeo"
date: "September 16, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
---

```{r}
pacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)
```

```{r}
#| eval: false
hunan <- st_read(dsn = "data/geospatial", layer = "Hunan")
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
hunan <- left_join(hunan, hunan2012, by='County') %>% dplyr::select(1:4, 7, 15)
```
```{r}
#| eval: false
write_rds(hunan, "data/rds/hunan_sf.rds")
```

```{r}
#| echo: false
hunan_sf <- read_rds("data/rds/hunan_sf.rds")
```

```{r}
hunan_sp <- hunan_sf %>% as_Spatial()
```

Determine adaptive bandwidth
longlat: To know that your coord pairs are in lat long, this package would transform to greate circle transformation, its in KM. 
Both methods below are the same but depends on geographical area
Calculate number of neighbours
AIC:
```{r}
bw_AIC <- bw.gwr(GDPPC~1, data=hunan_sp, approach="AIC", adaptive=TRUE, kernel="bisquare", longlat=1)
```

Cross validation:
```{r}
bw_AIC <- bw.gwr(GDPPC~1, data=hunan_sp, approach="AIC", adaptive=TRUE, kernel="bisquare", longlat=1)
```

Determine fixed bandwidth
```{r}
bw_CV <- bw.gwr(GDPPC~1, data=hunan_sp, approach="CV", adaptive=FALSE, kernel="bisquare", longlat=T)
```
```{r}
bw_CV <- bw.gwr(GDPPC~1, data=hunan_sp, approach="AIC", adaptive=FALSE, kernel="bisquare", longlat=T)
```

Compute grographically weighted summary statistics
Make sure that the adaptive variable is TRUE
```{r}
gwstat <- gwss(data=hunan_sp, vars="GDPPC", bw = bw_AIC, kernel="bisquare", adaptive=TRUE, longlat=T)
```

Code chunk below is used to extract SDF data table from gwss object output from gwss(). It will be converted into data.frame by using as.data.frame(). Assumes that the data format are the same. cbind() is used to append the newly derived data
```{r}
gwstat_df <- as.data.frame(gwstat$SDF)
hunan_gstat <- cbind(hunan_sf, gwstat_df)
```

Visualising geographically weighted summary statistics
```{r}
tm_shape(hunan_gstat) + tm_fill("GDPPC_LM", n=5, style = "quantile") + tm_borders(alpha=0.5) + tm_layout(main.title="Distribution of geographically weighted mean", main.title.position = "center", main.title.size = 1.0, legend.text.size = 1.2, legend.height = 1.50, legend.width = 1.50, frame=TRUE)
```
