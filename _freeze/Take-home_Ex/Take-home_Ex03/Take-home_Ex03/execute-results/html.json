{
  "hash": "3ed23cc0c1f838959927c43b1bdc74ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Ex 3\"\nauthor: \"Nathania Yeo\"\ndate: \"October 27, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Overview\n\nIn this exercise, my focus would be on 1st order Spatial Point Analysis - KDE. KDE plots are a powerful visualisation tool to help identify and analyse the spatial patterns of eldercare facility distribution across the region of interest. In our project, the region of interest consist of the 5 regions in Singapore as well as the different planning areas. \n\nThis analysis will help in data-driven insights, which could possible help stakeholders plan more effective service delivery and accessibility enhancements based on the current distribution of eldercare services.\n\n# R packages\n\nI will load the following R packages for the following purposes:\n\n1.  [**sf**](https://r-spatial.github.io/sf/): to import, manage and process vector-based geospatial data in R.\n\n2.  [**spatstat**](https://spatstat.org/): to perform 1st- and 2nd-order spatial point patterns analysis and derive kernel density estimation (KDE) layer.\n\n3.  [**raster**](https://cran.r-project.org/web/packages/raster/): used to convert image output generate by spatstat into raster format.\n\n4.  [**maptools**](https://cran.r-project.org/web/packages/maptools/index.html): use it to convert *Spatial* objects into *ppp* format of **spatstat**.\n\n5.  [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using [leaflet](https://leafletjs.com/) API.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spatstat, raster, maptools, tmap)\n```\n:::\n\n\n# Data Preparation\n\nThe data that I will be using includes:\n\n1.  URA 2014 Master Plan Planning Subzone boundary data. This data is in shapefile format which is downloaded from Data.gov.sg\n\n2.  Eldercare Services. This data provides both the location and information of eldercare services in Singapore. It was downloaded from Data.gov.sg and is in geojson format.\n\n3.  Coastal Ouline. It is provided by SLA and is in shapefile format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neldercare <- st_read(\"data/EldercareServices.geojson\") %>% st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `EldercareServices' from data source \n  `C:\\Nathania02\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data\\EldercareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 133 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.7119 ymin: 1.271472 xmax: 103.9561 ymax: 1.439561\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn=\"data\",layer=\"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Nathania02\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\nsg_sf <- st_read(dsn = \"data\", layer=\"CostalOutline\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CostalOutline' from data source \n  `C:\\Nathania02\\IS415-GAA\\Take-home_Ex\\Take-home_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 60 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 2663.926 ymin: 16357.98 xmax: 56047.79 ymax: 50244.03\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nSince mpsz_sf does not have the proper crs information, the code chunk below updates the crs information.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_transform(mpsz_sf, crs=3414)\nsg_sf <- st_transform(sg_sf, crs=3414)\n```\n:::\n\n\n# Geospatial Data Wrangling\n\n## Convert sf data frames to sp Spatial classes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz <- as_Spatial(mpsz_sf)\nec <- as_Spatial(eldercare)\nsg <- as_Spatial(sg_sf)\n```\n:::\n\n\n## Convert the Spatial class into generic sp format\n\n\n::: {.cell}\n\n```{.r .cell-code}\nec_sp <- as(ec, \"SpatialPoints\")\nsg_sp <- as(sg, \"SpatialPolygons\")\n```\n:::\n\n\n## Convert generic sp format inso spatstat ppp format\n\n\n::: {.cell}\n\n```{.r .cell-code}\nec_ppp <- as.ppp(eldercare)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in as.ppp.sf(eldercare): only first attribute column is used for marks\n```\n\n\n:::\n\n```{.r .cell-code}\nec_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 133 points\nmarks are of storage type  'character'\nwindow: rectangle = [14481.92, 41665.14] x [28218.43, 46804.9] units\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ec_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  133 points\nAverage intensity 2.632412e-07 points per square unit\n\nCoordinates are given to 11 decimal places\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n      133 character character \n\nWindow: rectangle = [14481.92, 41665.14] x [28218.43, 46804.9] units\n                    (27180 x 18590 units)\nWindow area = 505240000 square units\n```\n\n\n:::\n:::\n\n\n## Check for duplicate values\n\nAlthough the summary does not say that there are duplicate values, we will just do a check to make sure that we did not miss out anything.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(ec_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n## Creating owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_owin <- as.owin(sg_sf)\n```\n:::\n\n\n## Combining point events objects and owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\neldercareSG_ppp = ec_ppp[sg_owin]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neldercare_ppp.km = rescale.ppp(eldercareSG_ppp, 1000, \"km\")\n```\n:::\n\n\n# 1st Order Spatial Point Pattern Analysis \n\n## Level 1: General \n\n### Computing KDE - Automatic bandwidth\nThis section is creating the KDE plots based on the type of automatic bandwidth selected. \n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare_diggle <- density(eldercare_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare_ppl <- density(eldercare_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare_cvl <- density(eldercare_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare_scott <- density(eldercare_ppp.km, sigma=bw.scott, edge=TRUE, kernel=\"gaussian\")\n\nplot(kde_eldercare_diggle)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_ppl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_cvl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-12-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_scott)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-12-4.png){width=672}\n:::\n:::\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/overall_automatic.png)\n\n### Computing KDE - Type of kernel methods\nThis section is creating the KDE plots based on the kernel methods. Below is are 4 samples of variations based on the parameters that the user has selected. In the project, users can select any variations that they want.\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare_quartic <- density(eldercare_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"quartic\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(eldercare_ppp.km, sigma = bw.diggle, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\nkde_eldercare_ep <- density(eldercare_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"epanechnikov\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(eldercare_ppp.km, sigma = bw.ppl, edge = TRUE, kernel =\n\"epanechnikov\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\nkde_eldercare_gaussian <- density(eldercare_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare_disc <- density(eldercare_ppp.km,sigma=bw.scott, edge=TRUE, kernel=\"disc\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(eldercare_ppp.km, sigma = bw.scott, edge = TRUE, :\nBandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_quartic)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_ep)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_gaussian)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_disc)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-13-4.png){width=672}\n:::\n:::\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/overall_kernel.png)\n\n### Computing KDE - Fixed bandwidth\nBelow are some variations of KDE plots based on the bandwidth stated together with different kernel.\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare_sigma6 <- density(eldercare_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare_sigma9 <- density(eldercare_ppp.km, sigma=0.9, edge=TRUE, kernel=\"disc\")\nkde_eldercare_sigma5 <- density(eldercare_ppp.km, sigma=0.5, edge=TRUE, kernel=\"quartic\")\nkde_eldercare_sigma4 <- density(eldercare_ppp.km, sigma=0.4, edge=TRUE, kernel=\"epanechnikov\")\n\nplot(kde_eldercare_sigma6)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_sigma9)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_sigma5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_sigma4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-14-4.png){width=672}\n:::\n:::\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/overall_fixed.png)\n\n### Computing KDE - Adaptive bandwidth\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare_adaptive <- adaptive.density(eldercare_ppp.km, method=\"kernel\")\nplot(kde_eldercare_adaptive)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/overall_adaptive.png)\n\n## Level 2: Region\nThere are 5 regions in Singapore - Central, North, East, South, West and North-East. For the KDE plots, it will be based on a scenario where the user want to find out more about the eldercare services distribution in the Central region of Singapore.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:raster':\n\n    intersect, select, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:nlme':\n\n    collapse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n\n### Extracting study area\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral <- mpsz_sf %>%\n  filter(REGION_N == \"CENTRAL REGION\")\nnorth <- mpsz_sf %>%\n  filter(REGION_N == \"NORTH REGION\")\neast <- mpsz_sf %>%\n  filter(REGION_N == \"EAST REGION\")\nwest <- mpsz_sf %>%\n  filter(REGION_N == \"WEST REGION\")\nnorthe <- mpsz_sf %>%\n  filter(REGION_N == \"NORTH-EAST REGION\")\n```\n:::\n\n\n### Creating owin object\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_owin = as.owin(central)\nnorth_owin = as.owin(north)\neast_owin = as.owin(east)\nwest_owin = as.owin(west)\nnorthe_owin = as.owin(northe)\n```\n:::\n\n\n### Combining eldercare points and study area\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_ppp = ec_ppp[central_owin]\nnorth_ppp = ec_ppp[north_owin]\neast_ppp = ec_ppp[east_owin]\nwest_ppp = ec_ppp[west_owin]\nnorthe_ppp = ec_ppp[northe_owin]\n```\n:::\n\n\n### Rescaling to kilometres\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_ppp.km = rescale.ppp(central_ppp, 1000, \"km\")\n```\n:::\n\n\n### Computing KDE - Automatic Bandwidth\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_diggle <- density(central_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\ncentral_ppl <- density(central_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\ncentral_cvl <- density(central_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\ncentral_scott <- density(central_ppp.km, sigma=bw.scott, edge=TRUE, kernel=\"gaussian\")\n\nplot(central_diggle)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_ppl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-21-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_cvl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-21-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_scott)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-21-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/central_automatic.png)\n\n### Computing KDE - Type of Kernel methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentral_gaussian <- density(central_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\ncentral_quartic <- density(central_ppp.km, sigma=bw.scott, edge=TRUE, kernel=\"quartic\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(central_ppp.km, sigma = bw.scott, edge = TRUE, kernel =\n\"quartic\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\ncentral_ep <- density(central_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"epanechnikov\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(central_ppp.km, sigma = bw.diggle, edge = TRUE, kernel =\n\"epanechnikov\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\ncentral_disc <- density(central_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"disc\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(central_ppp.km, sigma = bw.CvL, edge = TRUE, kernel =\n\"disc\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(central_gaussian)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_quartic)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_ep)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-22-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(central_disc)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-22-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/central_kernel.png)\n\n\n\n### Computing KDE - Fixed bandwidth\nBelow are some variations of KDE plots based on the bandwidth stated together with different kernel.\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_central_eldercare2 <- density(central_ppp.km, sigma=0.2, edge=TRUE, kernel=\"gaussian\")\nkde_central_eldercare8 <- density(central_ppp.km, sigma=0.8, edge=TRUE, kernel=\"disc\")\nkde_central_eldercare7 <- density(central_ppp.km, sigma=0.7, edge=TRUE, kernel=\"quartic\")\nkde_central_eldercare3 <- density(central_ppp.km, sigma=0.3, edge=TRUE, kernel=\"epanechnikov\")\n\nplot(kde_central_eldercare2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_central_eldercare8)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_central_eldercare7)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-23-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_central_eldercare3)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-23-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/central_fixed.png)\n\n\n\n### Computing KDE - Adaptive Bandwidth\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_central_eldercare_adaptive <- adaptive.density(central_ppp.km, method=\"kernel\")\nplot(kde_central_eldercare_adaptive)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/central_adaptive.png)\n\n## Level 3: Planning Area\nThe below scenario is whereby a user is interested in looking at the distribution of eldercare services in a particular Planning Area such as PUNGGOL.\n\n### Extracting study area\nThe code chunk below will be used to extract the different planning areas. There are only a 15 areas extracted but in the project, more of the planning areas will be extracted.\n\n::: {.cell}\n\n```{.r .cell-code}\ntoapayoh <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"TOA PAYOH\")\nbukitmerah <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"BUKIT MERAH\")\nbishan <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"BISHAN\")\namk <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"ANG MO KIO\")\njuronge <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"JURONG EAST\")\nwoodlands <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"WOODLANDS\")\nchangi <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"CHANGI\")\npasirris <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"PASIR RIS\")\nbedok <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"BEDOK\")\ntm <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"TAMPINES\")\npunggol <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"PUNGGOL\")\nyishun <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"YISHUN\")\nsembawang <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"SEMBAWANG\")\nbukitbatok <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"BUKIT BATOK\")\njurongw <- mpsz_sf %>%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n```\n:::\n\n\n### Creating owin object\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntp_owin = as.owin(toapayoh)\nbs_owin = as.owin(bishan)\namk_owin = as.owin(amk)\nje_owin = as.owin(juronge)\nwdlds_owin = as.owin(woodlands)\nchangi_owin = as.owin(changi)\npr_owin = as.owin(pasirris)\nbedok_owin = as.owin(bedok)\ntm_owin = as.owin(tm)\npg_owin = as.owin(punggol)\nys_owin = as.owin(yishun)\nsbw_owin = as.owin(sembawang)\nbb_owin = as.owin(bukitbatok)\njw_owin = as.owin(jurongw)\n```\n:::\n\n\n### Combining eldercare points and study area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nec_tp_ppp = ec_ppp[tp_owin]\nec_bs_ppp = ec_ppp[bs_owin]\nec_amk_ppp = ec_ppp[amk_owin]\nec_je_ppp = ec_ppp[je_owin]\nec_wdlds_ppp = ec_ppp[wdlds_owin]\nec_changi_ppp = ec_ppp[changi_owin]\nec_pr_ppp = ec_ppp[pr_owin]\nec_bedok_ppp = ec_ppp[bedok_owin]\nec_tm_ppp = ec_ppp[tm_owin]\nec_pg_ppp = ec_ppp[pg_owin]\nec_ys_ppp = ec_ppp[ys_owin]\nec_sbw_ppp = ec_ppp[sbw_owin]\nec_bb_ppp = ec_ppp[bb_owin]\nec_jw_ppp = ec_ppp[jw_owin]\n```\n:::\n\n\n### Rescalling to kilometres\n\n\n::: {.cell}\n\n```{.r .cell-code}\nec_tp_ppp.km = rescale.ppp(ec_tp_ppp, 1000, \"km\")\nec_bs_ppp.km = rescale.ppp(ec_bs_ppp, 1000, \"km\")\nec_amk_ppp.km = rescale.ppp(ec_amk_ppp, 1000, \"km\")\nec_je_ppp.km = rescale.ppp(ec_je_ppp, 1000, \"km\")\nec_wdlds_ppp.km = rescale.ppp(ec_wdlds_ppp, 1000, \"km\")\nec_changi_ppp.km = rescale.ppp(ec_changi_ppp, 1000, \"km\")\nec_pr_ppp.km = rescale.ppp(ec_pr_ppp, 1000, \"km\")\nec_bedok_ppp.km = rescale.ppp(ec_bedok_ppp, 1000, \"km\")\nec_tm_ppp.km = rescale.ppp(ec_tm_ppp, 1000, \"km\")\nec_pg_ppp.km = rescale.ppp(ec_pg_ppp, 1000, \"km\")\nec_ys_ppp.km = rescale.ppp(ec_ys_ppp, 1000, \"km\")\nec_sbw_ppp.km = rescale.ppp(ec_sbw_ppp, 1000, \"km\")\nec_bb_ppp.km = rescale.ppp(ec_bb_ppp, 1000, \"km\")\nec_jw_ppp.km = rescale.ppp(ec_jw_ppp, 1000, \"km\")\n```\n:::\n\n\nI want to make sure that all the planning areas have points data so that it can be used in the kernel density estimation in the next steps. While doing so, I realised that areas such as Changi and Pasir ris do not have any point data. Therefore, these areas will not be an option in the storyboard in the project.\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ec_changi_ppp.km)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  0 points\nAverage intensity 0 points per square km\n\nCoordinates are integers\ni.e. rounded to the nearest km\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n        0 character character \n\nWindow: polygonal boundary\nsingle connected closed polygon with 800 vertices\nenclosing rectangle: [42.57532, 50.29396] x [32.52441, 41.74324] km\n                     (7.719 x 9.219 km)\nWindow area = 40.9405 square km\nUnit of length: 1 km\nFraction of frame area: 0.575\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ec_pr_ppp.km)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  0 points\nAverage intensity 0 points per square km\n\nCoordinates are integers\ni.e. rounded to the nearest km\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n        0 character character \n\nWindow: polygonal boundary\nsingle connected closed polygon with 672 vertices\nenclosing rectangle: [37.01507, 44.32258] x [37.20046, 42.56119] km\n                     (7.308 x 5.361 km)\nWindow area = 15.8096 square km\nUnit of length: 1 km\nFraction of frame area: 0.404\n```\n\n\n:::\n:::\n\n\n### Computing KDE - Automatic bandwidth\nThis section is creating the KDE plots based on the type of automatic bandwidth selected. \n\n::: {.cell}\n\n```{.r .cell-code}\npg_diggle <- density(ec_pg_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Berman-Diggle Cross-Validation criterion was minimised at right-hand\nend of interval [0, 0.245]; use argument 'hmax' to specify a wider interval for\nbandwidth 'sigma'\n```\n\n\n:::\n\n```{.r .cell-code}\npg_ppl <- density(ec_pg_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Likelihood Cross-Validation criterion was maximised at left-hand end\nof interval [0.553, 2.47]; use argument 'srange' to specify a wider interval\nfor bandwidth 'sigma'\n```\n\n\n:::\n\n```{.r .cell-code}\npg_cvl <- density(ec_pg_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\npg_scott <- density(ec_pg_ppp.km, sigma=bw.scott, edge=TRUE, kernel=\"gaussian\")\n\nplot(pg_diggle)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_ppl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-31-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_cvl)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-31-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_scott)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-31-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/pg_automatic.png)\n\n### Computing KDE - Type of kernel methods\nThis section is creating the KDE plots based on the kernel methods. Below is are 4 samples of variations based on the parameters that the user has selected. \n\n::: {.cell}\n\n```{.r .cell-code}\npg_quartic <- density(ec_pg_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"quartic\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(ec_pg_ppp.km, sigma = bw.diggle, edge = TRUE, kernel =\n\"quartic\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Berman-Diggle Cross-Validation criterion was minimised at right-hand\nend of interval [0, 0.245]; use argument 'hmax' to specify a wider interval for\nbandwidth 'sigma'\n```\n\n\n:::\n\n```{.r .cell-code}\npg_ep <- density(ec_pg_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"epanechnikov\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(ec_pg_ppp.km, sigma = bw.ppl, edge = TRUE, kernel =\n\"epanechnikov\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Likelihood Cross-Validation criterion was maximised at left-hand end\nof interval [0.553, 2.47]; use argument 'srange' to specify a wider interval\nfor bandwidth 'sigma'\n```\n\n\n:::\n\n```{.r .cell-code}\npg_gaussian <- density(ec_pg_ppp.km, sigma=bw.CvL, edge=TRUE, kernel=\"gaussian\")\npg_disc <- density(ec_pg_ppp.km,sigma=bw.scott, edge=TRUE, kernel=\"disc\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in density.ppp(ec_pg_ppp.km, sigma = bw.scott, edge = TRUE, kernel =\n\"disc\"): Bandwidth selection will be based on Gaussian kernel\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(pg_quartic)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_ep)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-32-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_gaussian)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-32-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(pg_disc)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-32-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/pg_kernel.png)\n\n### Computing KDE - Fixed bandwidth\nBelow are some variations of KDE plots based on the bandwidth stated together with different kernel.\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare6 <- density(ec_pg_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nkde_eldercare9 <- density(ec_pg_ppp.km, sigma=0.9, edge=TRUE, kernel=\"disc\")\nkde_eldercare5 <- density(ec_pg_ppp.km, sigma=0.5, edge=TRUE, kernel=\"quartic\")\nkde_eldercare4 <- density(ec_pg_ppp.km, sigma=0.4, edge=TRUE, kernel=\"epanechnikov\")\n\nplot(kde_eldercare6)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare9)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-33-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare5)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-33-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-33-4.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/pg_fixed.png)\n\n### Computing KDE - Adaptive bandwidth\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_eldercare_adaptive <- adaptive.density(ec_pg_ppp.km, method=\"kernel\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Likelihood Cross-Validation criterion was maximised at left-hand end\nof interval [0.553, 2.47]; use argument 'srange' to specify a wider interval\nfor bandwidth 'sigma'\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(kde_eldercare_adaptive)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex03_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n#### Shiny App (Storyboard)\n![This is the caption!](img/pg_adaptive.png)\n\n# Shiny App (Storyboard) Calibration Parameters\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(knitr)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create a data frame\ndata <- data.frame(\n  Parameter = c(\"Spatial Unit\", \"Places of Interest\", \"Area of Interest\", \"Automatic Bandwidth Methods\",\"Bandwidth\",\"Sigma\", \"Method\"),\n  Filter_Options = c(\"Overall, Region, Planning Area\", \"Eldercare services\", \"Depends on the Spatial Unit selected - Either the list of regions or the list of planning areas available e.g. Bedok, Punggol etc.\",\"bw.diggle, bw.ppl, bw.CvL, bw.scott\", \"Fixed, Adaptive\",\"Users can select a value from 0-1.0\",\"Kernel\")\n)\n\n# Generate the table\nkable(data, align = 'l', col.names = c(\"Parameter\", \"Filter Options\")) %>%\n  kable_styling(full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Parameter </th>\n   <th style=\"text-align:left;\"> Filter Options </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Spatial Unit </td>\n   <td style=\"text-align:left;\"> Overall, Region, Planning Area </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Places of Interest </td>\n   <td style=\"text-align:left;\"> Eldercare services </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Area of Interest </td>\n   <td style=\"text-align:left;\"> Depends on the Spatial Unit selected - Either the list of regions or the list of planning areas available e.g. Bedok, Punggol etc. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Automatic Bandwidth Methods </td>\n   <td style=\"text-align:left;\"> bw.diggle, bw.ppl, bw.CvL, bw.scott </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bandwidth </td>\n   <td style=\"text-align:left;\"> Fixed, Adaptive </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sigma </td>\n   <td style=\"text-align:left;\"> Users can select a value from 0-1.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Method </td>\n   <td style=\"text-align:left;\"> Kernel </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}