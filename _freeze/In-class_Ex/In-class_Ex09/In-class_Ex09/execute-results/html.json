{
  "hash": "40177f80186644ea7a5f2508911feb91",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Ex 9\"\nauthor: \"Nathania Yeo\"\ndate: \"October 21, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Load Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, sp, tmap, sf, ClustGeo, cluster, factoextra, NbClust, tidyverse, GGally)\n```\n:::\n\n\n# Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_ict <- read_rds(\"data/rds/shan_ict.rds\")\nshan_sf <- read_rds(\"data/rds/shan_sf.rds\")\nshan_sf_cluster <- read_rds(\"data/rds/shan_sf_cluster.rds\")\n```\n:::\n\n\n# Conventional Hierarchical Clustering\n\ncutree is a function that directly consume the object hclust, hsclut = hierarchical clustering\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproxmat <- dist(shan_ict, method = 'euclidean')\nhclust_ward <- hclust(proxmat, method = 'ward.D')\ngroups <- as.factor(cutree(hclust_ward, k=6))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(groups)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Factor w/ 6 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 2 1 3 3 1 3 3 3 ...\n - attr(*, \"names\")= chr [1:55] \"Mongmit\" \"Pindaya\" \"Ywangan\" \"Pinlaung\" ...\n```\n\n\n:::\n:::\n\n\n# Append to geospatial data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>% rename('CLUSTER' = as.matrix.groups.) %>% select(-c(3:4, 7:9)) %>% rename(TS = TS.x)\n```\n:::\n\n\n# Plotting the dendrogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hclust_ward, cex=0.6)\nrect.hclust(hclust_ward, k=6, border=2:5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-6-1.png){width=1152}\n:::\n:::\n\n\n# Cluster map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_cluster, \"CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# Spatially Constrained Clustering: SKATER Method\n\n## Computing nearest neighbours\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.nb <- poly2nb(shan_sf)\nsummary(shan.nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border=grey(.5))\npts <- st_coordinates(st_centroid(shan_sf))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: st_centroid assumes attributes are constant over geometries\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(shan.nb, pts, col='blue', add=TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlcosts <- nbcosts(shan.nb, shan_ict)\n```\n:::\n\n\nNOTE: hard code the style argument, keep it as binary form\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.w <- nb2listw(shan.nb, lcosts, style=\"B\")\nsummary(shan.w)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshan.mst <-mstree(shan.w)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border=gray(.5))\nplot.mst(shan.mst, pts, col=\"blue\", cex.lab=0.7, cex.circles=0.005, add=TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Computing spatially constrained clusters using SKATER method\n\n\n::: {.cell}\n\n```{.r .cell-code}\nskater.clust6 <- skater(edges= shan.mst[,1:2], data=shan_ict, method = 'euclidean', ncuts=5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(shan_sf), border=gray(.5))\n# plot(skater.clust6, pts, col=c(\"blue\", \"green\", \"pink\", \"red\", \"yellow\", cex_lab=0.7, cex.circles=0.005, add=TRUE))\n\nplot(skater.clust6, \n     pts, \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\nWarning in segments(coords[id1, 1], coords[id1, 2], coords[id2, 1], coords[id2,\n: \"add\" is not a graphical parameter\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups_mat <- as.matrix(skater.clust6$groups)\nshan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>% rename(\"skater_CLUSTER\" = as.factor.groups_mat.)\nqtm(shan_sf_spatialcluster, \"skater_CLUSTER\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# Spatially Constrained Clustering: ClustGeo Method\n\nCluster graph - d0: attribute distance, d1: spatial distance, at what cut off point to construct spatially distance analysis\n\n## Computing spatial distance matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- st_distance(shan_sf, shan_sf)\ndistmat <- as.dist(dist)\n```\n:::\n\n\n## Cluster graphs\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0,1,0.1), K=6, graph=TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.2)\ngroups <- as.factor(cutree(clustG, k=6))\nshan_sf_clustGeo <- cbind(shan_sf, as.matrix(groups)) %>% rename('clustGeo' = 'as.matrix.groups.')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqtm(shan_sf_clustGeo, \"clustGeo\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggparcoord(data = shan_sf_clustGeo, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ clustGeo) + \n  theme(axis.text.x = element_text(angle = 30))\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nEach line represents the province.\n",
    "supporting": [
      "In-class_Ex09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}